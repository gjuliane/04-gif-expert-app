{"version":3,"sources":["AddCategory.js","helpers/getGifs.js","GifGridItem.js","GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","item","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAe9C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCLlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAACC,GACpB,MAAO,CACHC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZV,IAAKQ,EAAKG,OAAOC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,yBAAKc,UAAU,8CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAsBtC,OAhBAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAM,SAACC,GACJH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAGjB,IAQIC,EDjBwBK,CAAa1B,GAAhCa,EAHyB,EAG9BN,KAAaa,EAHiB,EAGjBA,QAWpB,OACI,oCACI,4BAAMpB,GACJoB,GAAW,0CACb,yBAAKJ,UAAU,aAEHH,EAAOJ,KAAK,SAACC,GAAD,OACR,kBAAC,EAAD,eACIiB,IAAKjB,EAAKC,IACND,UEvBvBkB,EAAe,SAAAC,GAAU,IAAD,EACG3C,mBAAS,CAAC,WADb,mBAC1B4C,EAD0B,KACd7C,EADc,KAWjC,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAEA,4BAEQ6C,EAAWrB,KAAK,SAAAT,GACZ,OAAO,kBAAC,EAAD,CACH2B,IAAM3B,EACNA,SAAYA,UCrBxC+B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e4b8cab6.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( {setCategories} ) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if ( inputValue.trim().length > 2 ) {\n            setCategories( cats => [inputValue, ...cats] );\n            setInputValue(''); // seteamos a blando el input\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            ></input>\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\n\nexport const getGifs = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=BiEaNRyHelnFYjYkoAKGZeff5wfDK93T`\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map( (item) => {\n        return {\n            id: item.id,\n            title: item.title,\n            url: item.images.downsized_medium.url\n        }\n    });\n    // console.log(gifs);\n    return gifs\n}","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n    // console.log(props);\n    return (\n        <div className='card animate__animated animate__fadeInLeft'>\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport { useFetchGifs } from './hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n// import { getGifs } from './helpers/getGifs';\n\nexport const GifGrid = ( {category} ) => {\n    // const [images, setImages] = useState([]);\n\n    const {data:images, loading} = useFetchGifs(category);\n    \n\n    // useEffect( () => {\n    //     getGifs(category)\n    //         .then( setImages );\n    //     // .then(imgs => setImages(imgs))\n    // }, [ category ]);\n\n    \n\n    return (\n        <>\n            <h3>{ category }</h3>\n            { loading && <p>Cargando...</p> }\n            <div className='card-grid'>\n                    {\n                        images.map( (item) => (\n                            <GifGridItem \n                                key={item.id}\n                                {...item}\n                            />\n                        ))\n                    }\n            </div>\n        </>\n    )\n}\n","import {useState, useEffect} from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => { // No puden ser async\n        getGifs(category)\n        .then( (imgs) => {\n            setState({\n                data: imgs,\n                loading:false\n            });\n        });\n    }, []);\n\n    // setTimeout(() => {\n    //     setState({\n    //         data:[1,2,3,4,5,6,7],\n    //         loading: false\n    //     });\n    // }, 3000);\n    return state; // {data:[], loading: true};\n}\n","import React, {useState} from 'react'\n// import PropTypes from 'prop-types'\nimport { AddCategory } from './AddCategory';\nimport { GifGrid } from './GifGrid';\n\nexport const GifExpertApp = props => {\n    const [categories, setCategories] = useState(['Naruto']);\n    \n    // const handleAdd = () => {\n    //     setCategories((c) => {\n    //         return [...categories, '321'];\n    //     });\n    //     รณ\n    //     setCategories( cats => [...categories, '321'] );\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories= { setCategories} />\n            <hr/>\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\n            <ol>\n                {\n                    categories.map( category => {\n                        return <GifGrid\n                            key={ category }\n                            category= { category }\n                        />\n                    })\n\n                }\n            </ol>\n        </>\n    )\n}\n\n// GifExpertApp.propTypes = {\n\n// }\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}